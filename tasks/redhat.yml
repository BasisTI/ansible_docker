---
- name: Install required packages
  package:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present

- name: Add the Docker repository
  yum_repository:
    name: "{{ docker_repositories[ansible_distribution]['name'] }}"
    description: "{{ docker_repositories[ansible_distribution]['description'] }}"
    baseurl: "{{ docker_repositories[ansible_distribution]['baseurl'] }}"
    enabled: "{{ docker_repositories[ansible_distribution]['enabled'] }}"
    gpgcheck: "{{ docker_repositories[ansible_distribution]['gpgcheck'] }}"
    gpgkey: "{{ docker_repositories[ansible_distribution]['gpgkey'] }}"
    state: present
  when: ansible_distribution_major_version != '8'
    
- name: Add the Docker repository (RHEL 8)
  yum_repository:
    name: docker-ce
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    enabled: True
    gpgcheck: True
    gpgkey: https://download.docker.com/linux/centos/gpg
    state: present
  when: ansible_distribution_major_version == '8'

- name: Remove conflicting packages (RHEL 8)
  dnf:
    name:
      - buildah
      - podman
    state: absent
  when: ansible_distribution_major_version == '8'
    
- name: Install containerd.io from RPM (RHEL 8)
  dnf:
    name: https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.13-3.2.el7.x86_64.rpm
    state: present
  when: ansible_distribution_major_version == '8'
    
- name: Install Docker CE
  package:
    name:
      - "docker-ce{{ (docker_version | length > 0) | ternary('-' + docker_version, '') }}"
      - "docker-ce-cli{{ (docker_version | length > 0) | ternary('-' + docker_version, '') }}"
      - containerd.io
    state: present

- name: Create /etc/docker
  file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Set up the Docker daemon options (json)
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'
  register: docker_daemon_json_state

- name: Create /etc/systemd/system/docker.service.d
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Ensure service starts at boot
  systemd:
    name: docker
    enabled: True
    state: "{{ (docker_daemon_json_state is changed) | ternary('restarted', 'started') }}"
    daemon_reload: True
